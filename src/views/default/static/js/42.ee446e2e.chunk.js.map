{"version":3,"sources":["components/shared-components/cards/card-custom.js","views/public-views/villa/villa-all/index.js"],"names":["CardCustom","props","groups","url","images","useState","visible","setVisible","imagePaths","prefix","separator","Utils","ImagePath","className","src","thumbnail","prefix_url","filename","alt","photos","length","size","icon","locations","districts","name","toString","toLowerCase","preview","width","placeholder","alignItems","justifyContent","onClick","height","style","minWidth","objectFit","to","title","description","allowHalf","defaultValue","fontSize","margin","type","ghost","total_rooms","count","showZero","Array","isArray","display","PreviewGroup","onVisibleChange","vis","map","item","defaultProps","VillaAll","getVillaList","useEffect","params","withRooms","maxWidth","data","index","villaName","_id","replace","connect","list","Villa"],"mappings":"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","file":"static/js/42.ee446e2e.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Flex from \"../Flex\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\nimport {Image,Badge, Tooltip, Button, Rate} from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\nimport {LikeOutlined, EnvironmentOutlined,CommentOutlined,HomeOutlined} from '@ant-design/icons'\r\nimport Utils from \"../../../utils\";\r\n\r\nconst CardCustom = (props) => {\r\n    let {groups, url, images} = props\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const imagePaths = (prefix,url, separator = '/')=>{\r\n        return Utils.ImagePath(prefix,url,separator)\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"w-full min-h-[220px] shadow-xl rounded-xl bg-white w-full overflow-hidden\">\r\n                <div className=\"w-full h-[140px] relative rounded-xl overflow-hidden\">\r\n                    <img\r\n                        src={imagePaths(props?.thumbnail?.prefix_url,props?.thumbnail?.filename)}\r\n                        alt={images}\r\n                        className={'w-full h-full max-h-[180px] object-cover'}\r\n                    />\r\n                    <div\r\n                        className={'absolute bottom-4 right-4 bg-black w-10 h-10 bg-opacity-50 rounded-full z-10 flex items-center justify-center'}>\r\n                        <span className={'text-white'}>{props?.photos?.length ?? 0}</span>\r\n                    </div>\r\n                    <div className=\"absolute top-4 right-4 z-10\">\r\n                        <Button size={'small'} icon={<EnvironmentOutlined/>}>\r\n                            <span className={'!capitalize'}>\r\n                            {props?.locations?.districts?.name?.toString()?.toLowerCase() ?? \"-\"}\r\n                            </span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={'!relative'}>\r\n                    <div className=\"absolute h-[100px] w-full left-0 -top-[50px]\">\r\n                        <div className=\"w-full flex items-center px-4 space-x-4\">\r\n                            <div className=\"min-w-[100px] h-[100px] rounded-full overflow-hidden\">\r\n                                <Image\r\n                                    className={'relative z-0'}\r\n                                    preview={{visible: false}}\r\n                                    width={100}\r\n                                    placeholder={\r\n                                        <Flex alignItems={'center'} justifyContent={'center'}\r\n                                              className={'h-100 w-100'}>\r\n                                            <LoadingOutlined/>\r\n                                        </Flex>\r\n                                    }\r\n                                    onClick={() => setVisible(true)}\r\n                                    height={props?.size ?? 100}\r\n                                    style={{\r\n                                        minWidth: \"100% !important\",\r\n                                        objectFit: \"cover\"\r\n                                    }}\r\n                                    src={imagePaths(props?.thumbnail?.prefix_url,props?.thumbnail?.filename)}\r\n                                />\r\n                            </div>\r\n                            <div className={'flex flex-col justify-between'}>\r\n                                <Link to={url}>\r\n                                    <h3 className={'text-white p-0 m-0 text-lg line-clamp-1'}>{props?.title ?? \"-\"}</h3>\r\n                                </Link>\r\n                                <p className={'p-0 m-0 text-md line-clamp-1'}>{props?.description ?? \"-\"}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"px-4 pt-14 space-y-2 pb-4 flex items-center justify-between w-full\">\r\n                        <Rate allowHalf defaultValue={2.5} style={{fontSize: 14, margin: 0}}/>\r\n\r\n                        <div className=\"flex space-x-2\">\r\n\r\n                            <Button size={'small'} type=\"primary\" ghost icon={<LikeOutlined/>}/>\r\n                            <Button size={'small'} type=\"primary\" ghost icon={<CommentOutlined />}/>\r\n                            <Tooltip title={`Total Rooms ${props?.total_rooms ?? 0}`}>\r\n                                <Badge count={props?.total_rooms ?? 0} showZero>\r\n                                    <Button size={'small'} type=\"primary\" ghost icon={<HomeOutlined />}/>\r\n                                </Badge>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            {\r\n                Array.isArray(groups) && groups.length > 0 ?\r\n                    <div style={{display: 'none'}}>\r\n                        <Image.PreviewGroup preview={{visible, onVisibleChange: vis => setVisible(vis)}}>\r\n                            {\r\n                                Array.isArray(groups) && groups.length > 0 &&\r\n                                groups.map((item) => (\r\n                                    <Image src={imagePaths(item?.prefix, item?.url,'')}/>\r\n                                ))\r\n                            }\r\n                        </Image.PreviewGroup>\r\n                    </div>\r\n                    :\r\n                    <div style={{display: 'none'}}>\r\n                        <Image.PreviewGroup preview={{visible, onVisibleChange: vis => setVisible(vis)}}>\r\n                            <Image src={images}/>\r\n                        </Image.PreviewGroup>\r\n                    </div>\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nCardCustom.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    coordinates: PropTypes.array,\r\n    images: PropTypes.string,\r\n    url: PropTypes.string,\r\n    groups: PropTypes.array\r\n}\r\nCardCustom.defaultProps = {\r\n    type: \"default\",\r\n    groups: [],\r\n    url: \"/\",\r\n    images: \"https://images.unsplash.com/photo-1662835291968-0a61659ff3cd?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80 870w\"\r\n}\r\n\r\nexport default CardCustom","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport {getVillaList} from \"../../../../redux/actions\";\r\nimport LayoutContent from \"../../../../components/layout-components/LayoutContent\";\r\nimport {Avatar, Card, Col, Image, Row} from 'antd'\r\nimport {EditOutlined, EllipsisOutlined, SettingOutlined} from \"@ant-design/icons\";\r\nimport CardCustom from \"../../../../components/shared-components/cards/card-custom\";\r\n\r\nconst VillaAll = (props) => {\r\n    let { getVillaList } = props\r\n\r\n    useEffect(()=> {\r\n        getVillaList({\r\n            ...props?.params,\r\n            withRooms:true,\r\n        })\r\n    },[getVillaList])\r\n\r\n    return (\r\n        <div style={{width: \"100%\", maxWidth: 1080, margin: \"0 auto\"}}>\r\n            <div className={'py-10'}>\r\n                <div className=\"grid grid-cols-12 gap-4\">\r\n                    {\r\n                        props?.data?.length > 0 ? (\r\n                            props?.data.map((item,index)=> {\r\n                                return (\r\n                                    <div className=\"col-span-4\" key={`card-${index}`}>\r\n                                        <CardCustom\r\n                                            {...item}\r\n                                            title={item?.name ?? item?.villaName ?? \"-\"}\r\n                                            url={`/villa/p/${item?._id ?? item?.name?.replace(/ /g,'-').toString().toLowerCase() ?? \"undefined\"}`}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        ): (\r\n                            <span>Tidak ada</span>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nVillaAll.propTypes = {\r\n    getVillaList: PropTypes.func.isRequired\r\n}\r\nVillaAll.defaultProps = {}\r\n\r\nexport default connect(({Villa}) => {\r\n    let {list} = Villa\r\n\r\n    return {...list}\r\n}, {getVillaList})(VillaAll)\r\n"],"sourceRoot":""}